@ require c:load
@ require c:saved_inventory
@ require c:timer

global var item_list = []
    
for (item in MinecraftTypes.getDefinitionsForCategory("item")) {
    var buh = new item((resource)item.key)
    eval item_list.add(buh)
}
    

var inv = new saved_inventory(
    "search",
    coordinates<1 0 0>,
    coordinates<1 0 1>,
    coordinates<1 0 2>
)

var goals = new saved_inventory(
    "search_goals",
    coordinates<2 0 0>,
    coordinates<2 0 1>,
    coordinates<2 0 2>
)

var timer = new timer()

define function place_sign_start {
    setblock 6 13 20 air
    setblock 6 13 20 minecraft:oak_wall_sign[facing=east]{
        Text1:'{"clickEvent":{"action":"run_command","value":"function c:search/start"},"text":""}',
        Text2:'{"text":"Start", "bold":"true", "color":"white"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_exit {
    setblock 10 13 20 air
    setblock 10 13 20 minecraft:oak_wall_sign[facing=west]{
        Text1:'{"clickEvent":{"action":"run_command","value":"function c:search/exit"},"text":""}',
        Text2:'{"text":"Exit", "bold":"true", "color":"white"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_inv_edit {
    setblock 8 13 22 air
    setblock 8 13 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/inv_edit"}}',
        Text2:'{"text":"Edit Inventory", "bold":"true", "color":"white"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_inv_save {
    setblock 8 13 22 air
    setblock 8 13 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/inv_save"}}',
        Text2:'{"text":"Save","color":"green","bold":"true"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_inv_cancel {
    setblock 9 13 22 air
    setblock 9 13 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/inv_cancel"}}',
        Text2:'{"text":"Cancel","color":"red","bold":"true"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_goals_edit {
    setblock 8 12 22 air
    setblock 8 12 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/goals_edit"}}',
        Text2:'{"text":"Edit Goal", "bold":"true", "color":"white"}',
        Text3:'{"text":"Crafts", "bold":"true", "color":"white"}',
        Text4:'{"text":""}'
    }
}

define function place_sign_goals_save {
    setblock 8 12 22 air
    setblock 8 12 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/goals_save"}}',
        Text2:'{"text":"Save", "bold":"true", "color":"green"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function place_sign_goals_cancel {
    setblock 9 12 22 air
    setblock 9 12 22 minecraft:oak_wall_sign[facing=north]{
        Text1:'{"text":"","clickEvent":{"action":"run_command","value":"function c:search/goals_cancel"}}',
    Text2:'{"text":"Cancel", "bold":"true", "color":"red"}',
        Text3:'{"text":""}',
        Text4:'{"text":""}'
    }
}

define function setup_objectives {
    
    scoreboard objectives add goal_list dummy "Items Left"
    
    for (item in item_list) {
        
        var item_name    
        if (item.itemType.body.length < 17) {
            eval item_name = item.itemType.body
        } else {
            eval item_name = item.itemType.body.substring(0, 16)
        }
        var store_path_string = "Inventory[{id:\"" + item.itemType + "\"}]"
        
        # create crating criteria from the goal_list
        var criteria = "minecraft.crafted:" + item.itemType
        eval criteria = criteria.replace("minecraft:", "minecraft.")
        scoreboard objectives remove $item_name
        /${"execute if data storage c:search_goals_raw " + store_path_string + " run scoreboard objectives add " + item_name + " " + criteria}
        
        # set minimum count for items crafted
        /${"execute store result score count " + item_name + " run execute if data storage c:search_goals_raw " + store_path_string}
        /${"execute if score count " + item_name + " matches 1 store result score count " + item_name + " run data get storage c:search_goals_raw " + store_path_string + ".Count"}
        
        # set goal_list from goals storage
        /${"execute if data storage c:search_goals_raw " + store_path_string + " run scoreboard players operation " + item_name + " goal_list = count " + item_name}
    }
}

define function inv_save {
    eval inv.save()
    fill 9 14 22 7 12 22 air
    function c:search/place_sign_inv_edit
    function c:search/place_sign_goals_edit
    set isInvEditing->global = 0
}

define function inv_cancel {
    eval inv.cancel()
    fill 9 14 22 7 12 22 air
    function c:search/place_sign_inv_edit
    function c:search/place_sign_goals_edit    
    set isInvEditing->global = 0
}

define function goals_save {
    data modify storage c:search_goals_raw Inventory set from entity @s Inventory
    eval goals.save()
    function c:search/setup_objectives
    fill 9 14 22 7 12 22 air
    function c:search/place_sign_inv_edit
    function c:search/place_sign_goals_edit
    set isGoalsEditing->global = 0
}

define function goals_cancel {
    eval goals.cancel()
    fill 9 14 22 7 12 22 air
    function c:search/place_sign_inv_edit
    function c:search/place_sign_goals_edit
    set isGoalsEditing->global = 0
}

define function reset {
    scoreboard objectives setdisplay sidebar
    gamemode $default_gamemode
    function c:search/inv_cancel
    function c:search/goals_cancel
    eval timer.srigt_zero()
    set searching->global = 0
    
    for (item in item_list) {
        var item_name
        if (item.itemType.body.length < 17) {
            eval item_name = item.itemType.body
        } else {
            eval item_name = item.itemType.body.substring(0, 16)
        }
        unless score @s $item_name matches 0 scoreboard players set @s $item_name 0
        scoreboard players reset $item_name goal_list
    }
}

define function goals_edit {
    function c:search/reset
    eval timer.srigt_zero()
    eval goals.edit()
    fill 9 14 22 7 12 22 air
    set isGoalsEditing->global = 1
}

define function inv_edit {
    function c:search/reset
    eval timer.srigt_zero()
    eval inv.edit()
    fill 9 14 22 7 12 22 air
    set isInvEditing->global = 1
}

define function start {
    function c:search/reset
    eval inv.load()
    eval timer.srigt_start()
    set searching->global = 1
    
    scoreboard objectives setdisplay sidebar goal_list
}

define function exit {
    function c:search/reset
    function c:lobby/lobby
}

define function finish {
    eval timer.srigt_stop()
    set searching->global = 0
    set searchFinished->global = 0
    as @a playsound minecraft:block.note_block.bell master @s ~ ~ ~ 1 2
}

define function search {
    tp @a 8.5 12 20.5 90 0
    set lobby->global = 0
    set search->global = 1
}

define function load {
    @ tag load
    function c:search/place_sign_start
    function c:search/place_sign_exit
    function c:search/place_sign_inv_edit
    function c:search/place_sign_goals_edit
    function c:search/setup_objectives

}

define function one_time_setup {
    as @a advancement grant @s only minecraft:recipes/transportation/oak_boat
    as @a advancement grant @s only minecraft:recipes/transportation/spruce_boat
    as @a advancement grant @s only minecraft:recipes/transportation/birch_boat
    as @a advancement grant @s only minecraft:recipes/transportation/jungle_boat
    as @a advancement grant @s only minecraft:recipes/transportation/acacia_boat
    as @a advancement grant @s only minecraft:recipes/transportation/dark_oak_boat
    
    eval inv.add(new nbt({Slot: nbt_value<0b>, id: "minecraft:blaze_rod", Count: nbt_value<4b>}))
    eval inv.add(new nbt({Slot: nbt_value<1b>, id: "minecraft:string", Count: nbt_value<64b>}))
    eval inv.add(new nbt({Slot: nbt_value<2b>, id: "minecraft:glowstone_dust", Count: nbt_value<60b>}))
    eval inv.add(new nbt({Slot: nbt_value<3b>, id: "minecraft:dirt", Count: nbt_value<32b>}))
    eval inv.add(new nbt({Slot: nbt_value<4b>, id: "minecraft:gravel", Count: nbt_value<32b>}))
    eval inv.add(new nbt({Slot: nbt_value<5b>, id: "minecraft:oak_planks", Count: nbt_value<26b>}))
    eval inv.add(new nbt({Slot: nbt_value<6b>, id: "minecraft:iron_nugget", Count: nbt_value<64b>}))
    eval inv.add(new nbt({Slot: nbt_value<7b>, id: "minecraft:iron_nugget", Count: nbt_value<26b>}))
    eval inv.add(new nbt({Slot: nbt_value<8b>, id: "minecraft:wheat", Count: nbt_value<12b>}))
    eval inv.add(new nbt({Slot: nbt_value<9b>, id: "minecraft:apple", Count: nbt_value<1b>}))
    eval inv.add(new nbt({Slot: nbt_value<10b>, id: "minecraft:gold_ingot", Count: nbt_value<18b>}))
    eval inv.add(new nbt({Slot: nbt_value<11b>, id: "minecraft:carrot", Count: nbt_value<5b>}))
    eval inv.add(new nbt({Slot: nbt_value<12b>, id: "minecraft:flint", Count: nbt_value<1b>}))
    eval inv.add(new nbt({Slot: nbt_value<13b>, id: "minecraft:crying_obsidian", Count: nbt_value<30b>}))
    eval inv.add(new nbt({Slot: nbt_value<14b>, id: "minecraft:iron_ingot", Count: nbt_value<4b>}))
    eval inv.add(new nbt({Slot: nbt_value<15b>, id: "minecraft:stick", Count: nbt_value<7b>}))
    eval inv.add(new nbt({Slot: nbt_value<16b>, id: "minecraft:ender_pearl", Count: nbt_value<8b>}))
    eval inv.add(new nbt({Slot: nbt_value<17b>, id: "minecraft:nether_brick", Count: nbt_value<64b>}))
    eval inv.add(new nbt({Slot: nbt_value<18b>, id: "minecraft:gold_nugget", Count: nbt_value<22b>}))
    eval inv.storage_to_box()
    
    eval goals.add(new nbt({Slot: nbt_value<0b>, id: "minecraft:respawn_anchor", Count: nbt_value<5b>}))
    eval goals.add(new nbt({Slot: nbt_value<1b>, id: "minecraft:bucket", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<2b>, id: "minecraft:bread", Count: nbt_value<4b>}))
    eval goals.add(new nbt({Slot: nbt_value<3b>, id: "minecraft:iron_axe", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<4b>, id: "minecraft:bow", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<5b>, id: "minecraft:golden_apple", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<6b>, id: "minecraft:golden_helmet", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<7b>, id: "minecraft:golden_pickaxe", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<8b>, id: "minecraft:golden_carrot", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<9b>, id: "minecraft:shield", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<10b>, id: "minecraft:oak_boat", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<11b>, id: "minecraft:iron_bars", Count: nbt_value<16b>}))
    eval goals.add(new nbt({Slot: nbt_value<12b>, id: "minecraft:white_bed", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<13b>, id: "minecraft:white_bed", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<14b>, id: "minecraft:white_bed", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<15b>, id: "minecraft:white_bed", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<16b>, id: "minecraft:white_bed", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<17b>, id: "minecraft:flint_and_steel", Count: nbt_value<1b>}))
    eval goals.add(new nbt({Slot: nbt_value<18b>, id: "minecraft:ender_eye", Count: nbt_value<8b>}))
    eval goals.add(new nbt({Slot: nbt_value<19b>, id: "minecraft:coarse_dirt", Count: nbt_value<64b>}))
    eval goals.add(new nbt({Slot: nbt_value<20b>, id: "minecraft:nether_bricks", Count: nbt_value<5b>}))
    data modify storage c:search_goals_raw Inventory set from storage c:search_goals Inventory
    function c:search/setup_objectives
    eval goals.storage_to_box()
    
    say buh afosduhif
    
}

define function tick {
    @ tag tick
    
    define function con_tick {
        if score isInvEditing global matches 1 function c:search/place_sign_inv_save
        if score isInvEditing global matches 1 function c:search/place_sign_inv_cancel
        
        if score isGoalsEditing global matches 1 function c:search/place_sign_goals_save
        if score isGoalsEditing global matches 1 function c:search/place_sign_goals_cancel
        
        if score searching global matches 1 kill @e[type=item]
        
        if score searching global matches 1 set searchFinished->global = 1
        
        for (item in item_list) {
            var item_name = item.itemType.body
            if (item.itemType.body.length < 17) {
                eval item_name = item.itemType.body
            } else {
                eval item_name = item.itemType.body.substring(0, 16)
            }
            
            as @a if score searching global matches 1 if score count $item_name matches 1.. scoreboard players operation $item_name goal_list = count $item_name
            as @a if score searching global matches 1 if score count $item_name matches 1.. scoreboard players operation $item_name goal_list -= @s $item_name
            
            as @a if score searching global matches 1 if score $item_name goal_list matches ..0 scoreboard players reset $item_name goal_list
            as @a if score searching global matches 1 if score $item_name goal_list matches 1.. set searchFinished->global = 0
            
            as @a if score searching global matches 1 if score count $item_name matches 0.. if score searching global matches 1 clear @a $item
        }
        if score searchFinished global matches 1 function c:search/finish
    }
    
    if score search global matches 1 function /con_tick
    
}